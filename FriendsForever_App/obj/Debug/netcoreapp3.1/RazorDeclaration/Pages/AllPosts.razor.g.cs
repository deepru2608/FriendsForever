#pragma checksum "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\AllPosts.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fd0f207fb5ae9ab0fc0bb924deff0cb04b77e13a"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FriendsForever_App.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using FriendsForever_App.Repository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using FriendsForever_App.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using FriendsForever_App.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using Microsoft.AspNetCore.DataProtection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using FriendsForever_App.Security;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\_Imports.razor"
using Microsoft.AspNetCore.ProtectedBrowserStorage;

#line default
#line hidden
#nullable disable
    public partial class AllPosts : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 139 "C:\Users\deepa\Desktop\Asp Net Core\Social Network\FriendsForever\FriendsForever\FriendsForever_App\Pages\AllPosts.razor"
       
    public IEnumerable<PostImages> AllPhotos = new List<PostImages>();
    public List<CountPostImages> PostPhotoCount = new List<CountPostImages>();
    public IEnumerable<Post> AllPostsList = new List<Post>();
    private IDataProtector dataProtector;

    private async Task<ApplicationUser> GetUser()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        return await userManager.GetUserAsync(user);
    }

    protected override async Task OnInitializedAsync()
    {
        List<string> UserIdList = new List<string>();
        var user = await GetUser();
        int count = await centerRepository.CheckPostTableDataAsync(user.Id);
        if (count > 0)
        {
            UserIdList.Add(user.Id);
            var friendsList = await centerRepository.GetFriendsListByUserIdAsync(user.Id);
            if (friendsList.Count() > 0)
            {
                foreach (var friend in friendsList)
                {
                    UserIdList.Add(friend.UserIdResponse);
                }
            }
            AllPostsList = await centerRepository.FindPostByUserIdAsync(UserIdList);
            List<PostImages> postImagesList = new List<PostImages>();
            foreach (var post in AllPostsList)
            {
                var result = await centerRepository.FindPostImagesByPostIdAsync(post.PostedId);
                PostPhotoCount.Add(new CountPostImages
                {
                    PostedId = post.PostedId,
                    PostPhotoCount = result.Count()
                });
                foreach (var postImages in result)
                {
                    PostImages postImages1 = new PostImages
                    {
                        Id = postImages.Id,
                        PostedId = postImages.PostedId,
                        PostedPhoto = postImages.PostedPhoto
                    };
                    postImagesList.Add(postImages1);
                }
            }
            AllPhotos = postImagesList;
        }
    }

    private async Task InsertLikes(string postId)
    {
        var user = await GetUser();
        var count = await centerRepository.CheckDuplicateLikesAsync(user.Id, postId);
        if (count > 0)
        {
            await jS.ShowAlert("You have already liked it!");
        }
        else
        {
            var newLike = new Likes
            {
                PostedId = postId,
                LikeUserId = user.Id,
                LikeTimeStamp = DateTime.Now
            };
            var result = await centerRepository.InsertPostLikesAsync(newLike);
            if (result > 0)
            {
                var likeUpdation = await centerRepository.UpdatePostMasterLikesAsync(postId);
                if (likeUpdation > 0)
                {
                    StateHasChanged();
                }
                else
                {
                    await jS.ShowAlert("No updation pending!");
                }
            }
            else
            {
                await jS.ShowAlert("Invalid request, please try after sometimes!");
            }
        }
    }

    public async Task RouteNewPost(string postId)
    {
        await sessionStorage.SetAsync("postId", postId);
        navigationManager.NavigateTo($"Home/CommentBox", true);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ProtectedSessionStorage sessionStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jS { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManager<ApplicationUser> userManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private DataProtectionPurposeStrings dataProtectionPurposeStrings { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDataProtectionProvider dataProtectionProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAccountRepository accountRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICenterRepository centerRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
    }
}
#pragma warning restore 1591
